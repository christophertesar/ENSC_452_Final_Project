
#include <stdio.h>
#include <xil_io.h>
#include <sleep.h>
#include <memory>
#include "xiicps.h"
#include <xil_printf.h>
#include <xparameters.h>
#include "xgpio.h"
#include "xuartps.h"
#include "stdlib.h"
#include "xscutimer.h"
#include "xscugic.h"
#include "xil_mmu.h"
#include "audio.h"

#define sev() __asm("sev")
#define ARM1_STARTADR 0xFFFFFFF0
#define ARM1_BASEADDR 0x10080000
#define SIGNAL 0x00B00000
#define LEFT_LOC 0x00B00004
#define RIGHT_LOC 0x00B000008
#define COMM_VAL (*(volatile unsigned long *)(0xFFFF0000))


/* ---------------------------------------------------------------------------- *
 * 									main()										*
 * ---------------------------------------------------------------------------- *
 * Runs all initial setup functions to initialise the audio codec and IP
 * peripherals, before calling the interactive menu system.
 * ---------------------------------------------------------------------------- */

int main(void)
{
	xil_printf("Entering Main\r\n");
	//Configure the IIC data structure

	COMM_VAL = 0;
	//Disable cache on OCM
	// S=b1 TEX=b100 AP=b11, Domain=b1111, C=b0, B=b0
	Xil_SetTlbAttributes(0xFFFF0000, 0x14de2);

	int* signal_ptr = (int*) SIGNAL;
	int* right_ptr = (int*) RIGHT_LOC;
	int* left_ptr = (int*) LEFT_LOC;

	/* Display interactive menu interface via terminal */
	while(1){
		if (*signal_ptr){
			Xil_Out32(I2S_DATA_TX_L_REG, *left_ptr);
			Xil_Out32(I2S_DATA_TX_R_REG, *right_ptr);
			*signal_ptr = 0;
		}
	}
	// Disconnect the interrupt for the Timer.
    return 0;
}
